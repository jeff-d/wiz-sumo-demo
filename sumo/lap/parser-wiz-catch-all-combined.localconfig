# this parser local configuration adds the following to the fields dictionary 
# which are referenced in the Log Mapping "Wiz Catch All (Modified)"
#
# field dictionary entry    |   CSIEM schema field
# ---------------------------------------------------
# service                   |   cloud_service
# instanceId                |   device_uniqueId
# instanceName              |   device_hostname
# endpointUrl               |   http_url
# accessKeyId               |   targetUser_userId
# userName                  |   user_username       # appears in wc-id-1135 but not in wc-id-2022

[parser]
# flatten issue.evidence[[{},{}]] into issue.evidence[{},{}]
JSON_FLATTEN_SINGLE_LISTS = true                            

# pick strategy based on resource type
VARIABLE_TRANSFORM_INDEX = resource.type
VARIABLE_TRANSFORM:virtualMachine = issue_format_vm
VARIABLE_TRANSFORM:autoScalingGroup = issue_format_asg

# wc-id-1135
[transform:issue_format_vm]     
TRANSFORM_IF:resource.id:^i-.* = parse_instance_arn     # SETs service
SET:instanceName = {{resource.name}}
SET:instanceId = {{issue.evidence.1.externalId}}
SET:endpointUrl = {{issue.evidence.2.externalId}}
TRANSFORM:issue.evidence.3.name = parse_iam_accesskeyid
SET:userName = {{issue.evidence.4.name}}

# wc-id-1135
[transform:issue_format_asg]
TRANSFORM_IF:resource.id:^:autoScalingGroup:* = parse_asg_arn       # SETs service
SET:instanceId = {{issue.evidence.1.2.externalId}}
SET:instanceName = {{issue.evidence.1.2.name}}
SET:endpointUrl = {{issue.evidence.1.3.externalId}}
TRANSFORM:issue.evidence.1.4.name = parse_iam_accesskeyid
# SET:userName = {{issue.evidence.1.5.name}}      


# ======================

[transform:parse_iam_accesskeyid]
# expects a value like "AWS Secret Key (AccessKeyId=AKIAZ47RMXET6WIZSUMO)"
# regex demo: https://regex101.com/r/ciBGIK/1
FORMAT = REGEX
REGEX = ^AWS Secret Key.*(?<accessKeyId>[A-Z0-9]{20})

[transform:parse_instance_arn]
# https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html#arns-syntax
# expects AWS ARN like arn:partition:service:region:account-id:resource-type/resource-id
# regex demo: https://regex101.com/r/Q5TLHq/1
FORMAT = REGEX
REGEX = (?<stringtype>arn):(?<partition>[a-z]{3}|[a-z]{3}-[a-z]{2}-[a-z]{3}|[a-z]{3}-[a-z]{2}):(?<service>[a-z0-9]+):(?<region>[a-z]{2}-[a-z]{4,9}-\d{1}):(?<account>\d{12}):(?<resourceType>\w+)\/(?<resourceId>[a-zA-Z0-9]{1,4}-[a-zA-Z0-9]+)

# avoid polluting fields dictionary with redundant entries
DROP:stringtype = true
DROP:partition = true
DROP:region = true
DROP:account = true
DROP:resourceType = true
DROP:resourceId = true


[transform:parse_asg_arn]
# https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html#arns-syntax
# expects AWS ARN like arn:partition:autoscaling:region:account-id:autoScalingGroup:group-id:autoScalingGroupName/group-friendly-name
# regex demo: https://regex101.com/r/PBoX3x/1
FORMAT = REGEX
REGEX = (?<stringtype>arn):(?<partition>[a-z]{3}|[a-z]{3}-[a-z]{2}-[a-z]{3}|[a-z]{3}-[a-z]{2}):(?<service>[a-z0-9]+):(?<region>[a-z]{2}-[a-z]{4,9}-\d{1}):(?<account>\d{12}):(?<type>\w+):(?<GroupId>[a-zA-Z0-9-]{1,100}-[a-zA-Z0-9]+):autoScalingGroupName\/(?<GroupFriendlyName>[a-zA-Z0-9-]+)

# avoid polluting fields dictionary with redundant entries
DROP:stringtype = true
DROP:partition = true
DROP:region = true
DROP:account = true
DROP:resourceType = true
DROP:resourceId = true